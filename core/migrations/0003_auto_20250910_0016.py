# Generated by Django 5.2.6 on 2025-09-10 00:16

from django.db import migrations
import os
import json
from django.conf import settings


def import_projects_from_json(apps, schema_editor):
    Project = apps.get_model('core', 'Project')
    json_file_path = os.path.join(settings.BASE_DIR, 'projects.json')
    
    if not os.path.exists(json_file_path):
        print(f"Warning: {json_file_path} not found. Skipping project import.")
        return
    
    try:
        with open(json_file_path, 'r') as f:
            data = json.load(f)
        
        imported_count = 0
        for project_data in data.get('projects', []):
            # Skip projects without names
            if not project_data.get('name'):
                continue
                
            # Create or update project
            project, created = Project.objects.get_or_create(
                name=project_data['name'],
                defaults={
                    'address': project_data.get('address', ''),
                    'aliases': project_data.get('aliases', []),
                    'builders_fee': project_data.get('builders_fee'),
                    'usage_count': project_data.get('usage_count', 0),
                }
            )
            
            if created:
                imported_count += 1
            else:
                # Update existing project
                project.address = project_data.get('address', project.address)
                project.aliases = project_data.get('aliases', project.aliases)
                project.builders_fee = project_data.get('builders_fee', project.builders_fee)
                project.usage_count = project_data.get('usage_count', project.usage_count)
                project.save()
        
        print(f"Successfully imported {imported_count} projects from JSON file.")
        
    except Exception as e:
        print(f"Error importing projects: {e}")


def reverse_import_projects(apps, schema_editor):
    # This is a no-op for reverse migration
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_project'),
    ]

    operations = [
        migrations.RunPython(import_projects_from_json, reverse_import_projects),
    ]
